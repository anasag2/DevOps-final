name: DockerHub Auth & Push Diag (anasag007)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      # 1) Show token length (should be > 20). This does NOT reveal the token.
      - name: Check token length
        run: |
          LEN=$(printf %s "${{ secrets.DOCKERHUB_TOKEN }}" | wc -c | tr -d ' ')
          echo "Token length: $LEN"
          if [ "$LEN" -lt 20 ]; then
            echo "Token looks empty/invalid. Rotate DOCKERHUB_TOKEN."
            exit 1
          fi

      # 2) Login explicitly to docker.io with hard-coded username
      - name: Login to Docker Hub (manual)
        run: |
          printf %s "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.io -u "anasag007" --password-stdin

      # 3) Verify who we are logged in as
        # This MUST print: "Username: anasag007"
      - name: Confirm login identity
        run: |
          docker info | sed -n 's/^ Username: /Username: /p'
          if ! docker info | grep -q 'Username: anasag007'; then
            echo "❌ Not logged in as anasag007. Fix secrets/username."
            exit 1
          fi

      # 4) Build a tiny test image inline and push it (to isolate issues)
      - name: Build tiny test image
        run: |
          cat > Dockerfile.diag <<'EOF'
          FROM alpine:3.20
          CMD ["echo","hello-from-ci"]
          EOF
          docker build -t anasag007/devopsfinal:testlogin -f Dockerfile.diag .

      - name: Push tiny test image
        run: |
          docker push anasag007/devopsfinal:testlogin

      # 5) If tiny push works, push your real image
      - name: Build and push your repo image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            anasag007/devopsfinal:latest
            anasag007/devopsfinal:${{ github.sha }}
